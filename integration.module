<?php

/**
 * @file
 * Module file.
 */

include_once 'includes/integration.entity.inc';
include_once 'includes/integration.hooks.inc';

use Drupal\integration\Backend\Configuration\BackendConfiguration;

/**
 * Implements hook_permission().
 */
function integration_permission() {
  return array(
    'administer backends' => array(
      'title' => t('Administer integration layer backends'),
    ),
  );
}

/**
 * Determines whether the given user can perform actions on an entity.
 *
 * @param string $op
 *   Operation being performed: 'view', 'update', 'create' or 'delete'.
 * @param BackendConfiguration|NULL $backend
 *   Optionally an entity to check access for.
 * @param object|NULL $account
 *   The user to check for. Leave it to NULL to check for the global user.
 * @param string|NULL $entity_type
 *   The entity type of the entity to check for.
 *
 * @return bool
 *   Whether access is allowed or not.
 *
 * @see entity_type_supports()
 * @see integration_producer_entity_info()
 */
function integration_backend_access($op, $backend, $account, $entity_type) {
  return user_access('administer backends');
}

/**
 * Load backend entity given its machine name.
 *
 * @param string $machine_name
 *    Backend configuration entity machine name.
 *
 * @return BackendConfiguration
 *    Backend configuration entity.
 */
function integration_load_backend($machine_name) {
  return entity_load_single('integration_backend', $machine_name);
}

/**
 * Get integration plugins definition.
 *
 * @return array
 *    Plugin definitions.
 */
function integration_get_integration_plugins() {
  $definitions = module_invoke_all('integration_plugins');
  drupal_alter('integration_plugins', $definitions);
  return $definitions;
}

/**
 * Collect and return list of backend definitions.
 *
 * @return array
 *    List of backend definitions.
 */
function integration_backend_get_backend_info() {
  $info = module_invoke_all('integration_backend_info');
  drupal_alter('integration_backend_info', $info);
  return $info;
}

/**
 * Collect and return list of backend response handler definitions.
 *
 * @return array
 *    List of response handler definitions.
 */
function integration_backend_get_response_handler_info() {
  $info = module_invoke_all('integration_backend_response_handler_info');
  drupal_alter('integration_backend_response_handler_info', $info);
  return $info;
}

/**
 * Collect and return list of backend formatter handler definitions.
 *
 * @return array
 *    List of formatter definitions.
 */
function integration_backend_get_formatter_handler_info() {
  $info = module_invoke_all('integration_backend_formatter_handler_info');
  drupal_alter('integration_backend_formatter_handler_info', $info);
  return $info;
}

/**
 * Collect and return list of backend authentication handler definitions.
 *
 * @return array
 *    List of formatter definitions.
 */
function integration_backend_get_authentication_handler_info() {
  $info = module_invoke_all('integration_backend_authentication_handler_info');
  drupal_alter('integration_backend_authentication_handler_info', $info);
  return $info;
}
