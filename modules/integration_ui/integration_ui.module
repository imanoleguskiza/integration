<?php

/**
 * @file
 * Module file.
 */

include_once 'includes/integration_ui.admin.inc';

/**
 * Implements hook_entity_info_alter().
 */
function integration_ui_entity_info_alter(&$info) {
  $info['integration_backend']['admin ui'] = array(
    'controller class' => 'Drupal\integration_ui\Configuration\EntityUiController',
    'path' => 'admin/config/services/integration/backend',
  );
  return $info;
}

/**
 * Implements hook_integration_plugins_alter().
 */
function integration_ui_integration_plugins_alter(&$items) {
  $items['backend']['form handler'] = 'Drupal\integration_ui\Backend\BackendFormHandler';
}

/**
 * Implements hook_integration_backend_authentication_handler_info().
 */
function integration_ui_integration_backend_authentication_handler_info_alter(&$items) {
  $items['http_authentication']['form handler'] = 'Drupal\integration_ui\Backend\Authentication\HttpAuthenticationFormHandler';
}

/**
 * A wrapper around drupal_get_form() that helps building entity forms.
 *
 * @param string $entity_type
 *   The entity type for which to get the form.
 * @param object $entity
 *   The entity for which to return the form.
 * @param string $op
 *   One of 'edit', 'add' or 'clone'. Defaults to edit.
 * @param array $form_state
 *   A pre-populated form state.
 *
 * @return array
 *   The fully built and processed form, ready to be rendered.
 *
 * @see entity_ui_get_form()
 */
function integration_ui_get_form($entity_type, $entity, $op = 'edit', array $form_state = array()) {
  if (!isset($entity) && $op == 'add') {
    $entity = entity_create($entity_type, array());
  }

  $form_state['wrapper_callback'] = 'entity_ui_main_form_defaults';
  $form_state['entity_type'] = $entity_type;
  form_load_include($form_state, 'inc', 'entity', 'includes/entity.ui');

  if ($op == 'clone') {
    $entity = entity_ui_clone_entity($entity_type, $entity);
  }

  $form_state['build_info']['args'] = array($entity, $op, $entity_type);
  return drupal_build_form('integration_ui_entity_form', $form_state);
}

/**
 * Implements hook_action_info().
 */
function integration_ui_form_ajax_callback($form, $form_state) {
  $target = $form_state['triggering_element']['#ajax']['target'];
  return $form[$target];
}

/**
 * Implements hook_theme().
 */
function integration_ui_theme() {
  return array(
    'integration_form_table' => array(
      'render element' => 'form',
    ),
  );
}

/**
 * Theme callback for the form table.
 *
 * @see integration_ui_theme()
 * @link http://e9p.net/theming-drupal-7-form-elements-table
 */
function theme_integration_form_table(&$variables) {
  $form = $variables['form'];
  $rows = $form['rows'];
  $header = $form['#header'];

  $content = array(
    '#theme' => 'table',
    '#header' => $header,
    '#rows' => array(),
  );

  foreach (element_children($rows) as $row_index) {
    $row = array();
    foreach (element_children($rows[$row_index]) as $col_index) {
      $row[] = drupal_render($rows[$row_index][$col_index]);
    }
    $content['#rows'][] = $row;
  }

  return drupal_render($content);
}
